#ifndef __CPUAPP_H__
#define __CPUAPP_H__

template <typename T> void cpuSingle(T *__restrict__ u, 
            T *__restrict__ xi, 
            T *__restrict__ qi, 
            int *__restrict__ ti, 
            int *__restrict__ ai, 
            T *__restrict__ mu, 
            T *__restrict__ eta, 
            int *__restrict__ kappa, 
            int dim, int ncq, int nmu, int neta, int nkappa, int inum, int potnum, int bondtype);


template <typename T> void cpuComputeSingleEnergyForce(T *__restrict__ u,
            T *__restrict__ d_u,
            T *__restrict__ u_x,
            T *__restrict__ xi, 
            T *__restrict__ qi, 
            int *__restrict__ ti, 
            int *__restrict__ ai, 
            T *__restrict__ mu, 
            T *__restrict__ eta, 
            int *__restrict__ kappa, 
            int dim, int ncq, int nmu, int neta, int nkappa, int inum, int potnum, int bondtype);

template <typename T> void cpuPair(T *__restrict__ u,
                                    T *__restrict__ xij,
                                    T *__restrict__ qi, 
                                    T *__restrict__ qj, 
                                    int *__restrict__ ti, 
                                    int *__restrict__ tj, 
                                    int *__restrict__ ai, 
                                    int *__restrict__ aj, 
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int dim, int ncq, int nmu, int neta, 
                                    int nkappa, int ijnum, int potnum, int bondtype);

template <typename T> void cpuComputePairEnergyForce(T *__restrict__ u,
                                    T *__restrict__ d_u,
                                    T *__restrict__ u_x,
                                    T *__restrict__ xij,
                                    T *__restrict__ qi, 
                                    T *__restrict__ qj, 
                                    int *__restrict__ ti, 
                                    int *__restrict__ tj, 
                                    int *__restrict__ ai, 
                                    int *__restrict__ aj, 
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int dim, int ncq, int nmu, int neta, 
                                    int nkappa, int ijnum, int potnum, int bondtype);


template <typename T> void cpuTriplet(T *__restrict__ u,
                                    T *__restrict__ xij,
                                    T *__restrict__ xik,
                                    T *__restrict__ qi, 
                                    T *__restrict__ qj, 
                                    T *__restrict__ qk,         
                                    int *__restrict__ ti, 
                                    int *__restrict__ tj, 
                                    int *__restrict__ tk,         
                                    int *__restrict__ ai, 
                                    int *__restrict__ aj, 
                                    int *__restrict__ ak,         
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int dim, int ncq, int nmu, int neta, 
                                    int nkappa, int ijknum, int potnum, int bondtype);

template <typename T> void cpuComputeTripletEnergyForce(T *__restrict__ u,
                                    T *__restrict__ d_u,        
                                    T *__restrict__ u_xij,   
                                    T *__restrict__ u_xik,   
                                    T *__restrict__ xij,
                                    T *__restrict__ xik,
                                    T *__restrict__ qi, 
                                    T *__restrict__ qj, 
                                    T *__restrict__ qk,         
                                    int *__restrict__ ti, 
                                    int *__restrict__ tj, 
                                    int *__restrict__ tk,         
                                    int *__restrict__ ai, 
                                    int *__restrict__ aj, 
                                    int *__restrict__ ak,         
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int dim, int ncq, int nmu, int neta, 
                                    int nkappa, int ijknum, int potnum, int bondtype);

template <typename T> void cpuQuadruplet(T *__restrict__ u,
                                    T *__restrict__ xij,
                                    T *__restrict__ xik,
                                    T *__restrict__ xil,        
                                    T *__restrict__ qi, 
                                    T *__restrict__ qj, 
                                    T *__restrict__ qk,
                                    T *__restrict__ ql,        
                                    int *__restrict__ ti, 
                                    int *__restrict__ tj, 
                                    int *__restrict__ tk,    
                                    int *__restrict__ tl,            
                                    int *__restrict__ ai, 
                                    int *__restrict__ aj, 
                                    int *__restrict__ ak,    
                                    int *__restrict__ al,            
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int dim, int ncq, int nmu, int neta, 
                                    int nkappa, int ijklnum, int potnum, int bondtype);

template <typename T> void cpuComputeQuadrupletEnergyForce(T *__restrict__ u,
                                    T *__restrict__ d_u,             
                                    T *__restrict__ u_xij,   
                                    T *__restrict__ u_xik,   
                                    T *__restrict__ u_xil,   
                                    T *__restrict__ xij,
                                    T *__restrict__ xik,
                                    T *__restrict__ xil,        
                                    T *__restrict__ qi, 
                                    T *__restrict__ qj, 
                                    T *__restrict__ qk,
                                    T *__restrict__ ql,        
                                    int *__restrict__ ti, 
                                    int *__restrict__ tj, 
                                    int *__restrict__ tk,    
                                    int *__restrict__ tl,            
                                    int *__restrict__ ai, 
                                    int *__restrict__ aj, 
                                    int *__restrict__ ak,    
                                    int *__restrict__ al,            
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int dim, int ncq, int nmu, int neta, 
                                    int nkappa, int ijklnum, int potnum, int bondtype);

template <typename T> void cpuPaircDensity(T *__restrict__ u,
                                    T *__restrict__ d_u,                     
                                    T *__restrict__ u_rho,   
                                    T *__restrict__ rho,   
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int nrho, int nmu, int neta, 
                                    int nkappa, int inum, int potnum);

template <typename T> void cpuTripletcDensity(T *__restrict__ u,
                                    T *__restrict__ d_u,                             
                                    T *__restrict__ u_rho,   
                                    T *__restrict__ rho,   
                                    T *__restrict__ mu, 
                                    T *__restrict__ eta, 
                                    int *__restrict__ kappa, 
                                    int nrho, int nmu, int neta, 
                                    int nkappa, int inum, int potnum);

void cpuElectronDensity(dstype *rhoi, dstype *rhoij, int *pairnum, int *pairnumsum, int inum);
void cpuEmbedingForce(dstype *fij, dstype *d_rhoi, int *pairnum, int *pairnumsum, int inum);

#endif  

